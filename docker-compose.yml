services:
  web:
    image: nginx:latest
    ports:
      - "8085:80"
    volumes:
      - ./app/static:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - todo-network

  db-master:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: todo_db
    volumes:
      - postgres_master_data:/var/lib/postgresql/data
      - ./01-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./02-init.sh:/docker-entrypoint-initdb.d/02-init.sh
      - ./03-replication-setup.sql:/docker-entrypoint-initdb.d/03-replication-setup.sql
      - ./backup.sql:/tmp/backup.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d todo_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - todo-network

  db-replica:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_replica_data:/var/lib/postgresql/data
    command: |
      bash -c "
      echo 'Waiting for master to be ready...'
      sleep 15
      
      echo 'Setting up replication...'
      # Используем PGPASSWORD для автоматической аутентификации
      su - postgres -c 'PGPASSWORD=replicate123 pg_basebackup -h db-master -U replicator -D /var/lib/postgresql/data -vP --wal-method=stream -R'
      
      echo 'Starting PostgreSQL replica...'
      exec postgres
      "
    depends_on:
      - db-master
    networks:
      - todo-network

  app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=db-master
      - DB_NAME=todo_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    depends_on:
      db-master:
        condition: service_healthy
    networks:
      - todo-network
    volumes:
      - ./app:/app/app
      - ./templates:/app/templates

networks:
  todo-network:
    driver: bridge

volumes:
  postgres_master_data:
  postgres_replica_data:
